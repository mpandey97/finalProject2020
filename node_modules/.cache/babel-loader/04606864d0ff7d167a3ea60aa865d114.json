{"ast":null,"code":"var _jsxFileName = \"/Users/sanidhyasitaula/cs-project/src/components/API.js\";\nimport React from 'react';\n/**\n * App\n *\n * Simple react js fetch example\n */\n\nexport default class Create extends Component {\n  /**\n   * constructor\n   *\n   * @object  @props  parent props\n   * @object  @state  component state\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n  /**\n   * componentDidMount\n   *\n   * Fetch json array of objects from given url and update state.\n   */\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        isLoaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /**\n   * render\n   *\n   * Render UI\n   */\n\n\n  render() {\n    const {\n      isLoaded,\n      items\n    } = this.state;\n    if (!isLoaded) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Name: \", item.name, \" | Email: \", item.email))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sanidhyasitaula/cs-project/src/components/API.js"],"names":["React","Create","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","catch","err","console","log","render","map","item","id","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;AAOA,eAAe,MAAMC,MAAN,SAAqBC,SAArB,CAA+B;AAE1C;;;;;;AAMAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKH;AAED;;;;;;;AAKAC,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAEM,IADG;AAEVL,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH,KAPL,EAOOO,KAPP,CAOcC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAWH;AAED;;;;;;;AAKAG,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEX,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAsB,KAAKD,KAAjC;AAEA,QAAI,CAACE,QAAL,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEJ,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACa,GAAN,CAAUC,IAAI,iBACX;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWD,IAAI,CAACE,IADhB,gBACgCF,IAAI,CAACG,KADrC,CADH,CADL,CADJ,CADJ;AAYH;;AA/DyC","sourcesContent":["import React from 'react';\n\n/**\n * App\n *\n * Simple react js fetch example\n */\n\n\nexport default class Create extends Component {\n\n    /**\n     * constructor\n     *\n     * @object  @props  parent props\n     * @object  @state  component state\n     */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            items: [],\n            isLoaded: false\n        }\n\n    }\n\n    /**\n     * componentDidMount\n     *\n     * Fetch json array of objects from given url and update state.\n     */\n    componentDidMount() {\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    items: json,\n                    isLoaded: true, \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    /**\n     * render\n     *\n     * Render UI\n     */\n    render() {\n\n        const { isLoaded, items } = this.state;\n\n        if (!isLoaded)\n            return <div>Loading...</div>;\n\n        return (\n            <div className=\"App\">\n                <ul>\n                    {items.map(item => (\n                        <li key={item.id}>\n                            Name: {item.name} | Email: {item.email}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}