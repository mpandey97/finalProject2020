{"version":3,"sources":["pic1.jpg","components/edit.component.js","components/create.component.js","components/TableRow.js","components/index.component.js","components/API.js","components/Loginpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Edit","Component","props","onChangePersonName","bind","onChangeBusinessName","onChangeGstNumber","onSubmit","state","person_name","business_name","business_gst_number","axios","get","this","match","params","id","then","response","setState","data","catch","error","console","log","e","target","value","preventDefault","obj","post","res","history","push","style","marginTop","align","className","type","onChange","TableRow","delete","_id","err","to","Index","business","map","object","i","key","tabRow","Create","items","isLoaded","fetch","json","item","name","email","App","title","body","posts","componentDidMount","getData","displayProfile","length","index","src","require","width","height","exact","path","component","API","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bfcb9ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.5829f588.jpg\";","// edit.component.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\n    this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: '',\n      business_name: '',\n      business_gst_number:''\n    }\n  }\n\n  componentDidMount() {\n      axios.get('http://localhost:4000/business/edit/'+this.props.match.params.id)\n          .then(response => {\n              this.setState({ \n                person_name: response.data.person_name, \n                business_name: response.data.business_name,\n                business_gst_number: response.data.business_gst_number });\n          })\n          .catch(function (error) {\n              console.log(error);\n          })\n    }\n\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value\n    });\n  }\n  onChangeBusinessName(e) {\n    this.setState({\n      business_name: e.target.value\n    })  \n  }\n  onChangeGstNumber(e) {\n    this.setState({\n      business_gst_number: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      person_name: this.state.person_name,\n      business_name: this.state.business_name,\n      business_gst_number: this.state.business_gst_number\n    };\n    axios.post('http://localhost:4000/business/update/'+this.props.match.params.id, obj)\n        .then(res => console.log(res.data));\n    \n    this.props.history.push('/index');\n  }\n \n  render() {\n    return (\n        <div style={{ marginTop: 10 }}>\n            <h3 align=\"center\">Update Profile</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Person Name:  </label>\n                    <input \n                      type=\"text\" \n                      className=\"form-control\" \n                      value={this.state.person_name}\n                      onChange={this.onChangePersonName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Description: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.business_name}\n                      onChange={this.onChangeBusinessName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Profile Picture: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.business_gst_number}\n                      onChange={this.onChangeGstNumber}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" \n                      value=\"Update Profile\" \n                      className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}","// create.component.js\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\n    this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: '',\n      business_name: '',\n      business_gst_number:''\n    }\n  }\n    \n     \n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value\n    });\n  }\n  onChangeBusinessName(e) {\n    this.setState({\n      business_name: e.target.value\n    })  \n  }\n  onChangeGstNumber(e) {\n    this.setState({\n      business_gst_number: e.target.value\n    })\n  }\n    \n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      person_name: this.state.person_name,\n      business_name: this.state.business_name,\n      business_gst_number: this.state.business_gst_number\n    };\n      \n\n      \n      \n    axios.post('http://localhost:4000/business/add', obj)\n        .then(res => console.log(res.data));\n    \n    this.setState({\n      person_name: '',\n      business_name: '',\n      business_gst_number: ''\n    })\n  }\n \n   \n    \n  render() {\n \n    return (\n        <div style={{ marginTop: 10 }}>\n            <h3>Edit Profile</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>New Name:  </label>\n                    <input \n                      type=\"text\" \n                      className=\"form-control\" \n                      value={this.state.person_name}\n                      onChange={this.onChangePersonName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>New Description: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.business_name}\n                      onChange={this.onChangeBusinessName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Profile Picture: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.business_gst_number}\n                      onChange={this.onChangeGstNumber}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Register Business\" className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}\n     ","// TableRow.js\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass TableRow extends Component {\n    \n  constructor(props) {\n        super(props);\n        this.delete = this.delete.bind(this);\n    }\n     \n    delete() {\n        axios.get('http://localhost:4000/business/delete/'+this.props.obj._id)\n            .then(console.log('Deleted'))\n            .catch(err => console.log(err))\n    }\n    \n  render() {\n    return (\n        <tr>\n          <td>\n            {this.props.obj.person_name}\n          </td>\n        \n          <td>\n            {this.props.obj.business_name}\n          </td>\n        \n          <td>\n            {this.props.obj.business_gst_number}\n          </td>\n        \n          <td>\n            <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\n          </td>\n        \n        \n          \n        </tr>\n    );\n  }\n}\n\nexport default TableRow;\n\n\n\n\n","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\n\nexport default class Index extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {business: []};\n    }\n    componentDidMount(){\n      axios.get('http://localhost:4000/business')\n        .then(response => {\n          this.setState({ business: response.data });\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n    tabRow(){\n      return this.state.business.map(function(object, i){\n          return <TableRow obj={object} key={i} />;\n      });\n    }\n\n    render() {\n      return (\n        <div>\n          <h3 align=\"center\">Profile Page</h3>\n          <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n            <thead>\n              <tr>\n                <th>Person</th>\n                <th>Description</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.tabRow()}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  }","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\n\n/**\n * App\n *\n * Simple react js fetch example\n */\n\n\nexport default class Create extends Component {\n\n    /**\n     * constructor\n     *\n     * @object  @props  parent props\n     * @object  @state  component state\n     */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            items: [],\n            isLoaded: false\n        }\n\n    }\n\n    /**\n     * componentDidMount\n     *\n     * Fetch json array of objects from given url and update state.\n     */\n    componentDidMount() {\n\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    items: json,\n                    isLoaded: true, \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    /**\n     * render\n     *\n     * Render UI\n     */\n    render() {\n\n        const { isLoaded, items } = this.state;\n\n        if (!isLoaded)\n            return <div>Loading...</div>;\n\n        return (\n            <div className=\"App\">\n                <ul>\n                    {items.map(item => (\n                        <li key={item.id}>\n                            Name: {item.name} | Email: {item.email}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n\n    }\n\n}\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n   /*\n    const loginForm = document.getElementById(\"login-form\");\n    const loginButton = document.getElementById(\"login-form-submit\");\n    const loginErrorMsg = document.getElementById(\"login-error-msg\");\n\n    loginButton.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const username = loginForm.username.value;\n        const password = loginForm.password.value;\n\n        if (username === \"admin\" && password === \"admin\") {\n            window.location.replace(\"http://localhost:3000/create\");\n\n        } else {\n            loginErrorMsg.style.opacity = 1;\n    }\n})\n*/\n  }\n\n  render() {\n    return (\n    <router> \n        \n     <h1 id=\"login-header\">Login</h1>\n    \n        <div id=\"login-error-msg-holder\">\n        <p id=\"login-error-msg\">Invalid username <span id=\"error-msg-second-line\">and/or password</span></p>\n        </div>\n    \n    <form id=\"login-form\" action = \"/loginfunc.html\" method = 'get'>\n      <input type=\"text\" name=\"username\" id=\"username-field\"  placeholder=\"Username\" />\n      <input type=\"password\" name=\"password\" id=\"password-field\"  placeholder=\"Password\" />\n      <input type=\"submit\" value=\"Login\" id=\"login-form-submit\" />\n    </form>\n\n       \n      \n\n      </router>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\nimport Login from './components/Loginpage'\nimport axios from 'axios'; \nimport API from './components/API'\n\nclass App extends Component {\n   \n    \n    state = {\n        title : '',\n        body : '',\n        posts : ''\n        \n    };\n    \n     componentDidMount = () => {\n        this.getData(); \n    }\n    \n    getData = () => {\n        axios.get('http://localhost:4000/business')\n        .then((response) => {\n            const data = response.data; \n            this.setState({posts : data});\n            console.log('data recieved'); \n            \n        })\n        .catch(() => {\n            console.log('errorrrr');\n        }  )\n        \n    }\n    \n    displayProfile = (posts) => {\n        if (!posts.length){\n            \n            return <div> No Profile Found</div>; \n        }\n        return posts.map((post, index) => (\n            <div key = {index}>\n                \n                <h2> {post.person_name} </h2>\n                <p> {post.business_name} </p>\n                </div> \n        )\n                 \n                 \n        );\n        \n            }; \n\n    \n  render() {\n    \n      \n    return (\n       \n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to={'/'} className=\"navbar-brand\">Profile Page</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n        \n        <li className=\"nav-item\">\n                  <Link to={'/create'} className=\"nav-link\">Admin</Link>\n                </li>                \n               \n              </ul>\n            </div>\n          </nav> <br/>\n          <div className = \"image\"><img src={require('./pic1.jpg')} width=\"200\" height=\"200\" /> </div>\n          \n        <div>{this.displayProfile(this.state.posts)}</div> <br/>\n            \n        <div>\n            <h2> JSON Placeholder API</h2>\n            <Link to={'/api'}>Click this button to generate</Link>\n        \n            </div>\n        \n        \n          <Switch>\n                \n              <Route exact path='/create' component={ Index } />\n              <Route path='/edit/:id' component={ Edit } />\n\n              <Route path='/index' component={ Index } />\n                  <Route path = '/api' component = {API}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n\n}\n\n\n  export default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}